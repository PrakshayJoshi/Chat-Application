{"ast":null,"code":"var _jsxFileName = \"/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/api/messages');\n      const data = await response.json();\n      setMessages(data); // assuming the backend sends an array of messages\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n    }\n  };\n  const sendMessage = () => {\n    if (message.trim() !== '') {\n      fetch('http://localhost:9000/api/messages/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: message\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n        if (data.success) {\n          // This should add the actual message object returned from the server\n          setMessages([...messages, data.message]);\n        }\n        setMessage('');\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","message","setMessage","messages","setMessages","fetchMessages","response","fetch","data","json","error","console","sendMessage","trim","method","headers","body","JSON","stringify","text","then","log","success","catch","handleKeyDown","event","key","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyDown","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/home.css';\n\nconst HomePage = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        fetchMessages();\n    }, []);\n\n    const fetchMessages = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/api/messages');\n            const data = await response.json();\n            setMessages(data); // assuming the backend sends an array of messages\n        } catch (error) {\n            console.error('Failed to fetch messages:', error);\n        }\n    };\n\n    const sendMessage = () => {\n        if (message.trim() !== '') {\n            fetch('http://localhost:9000/api/messages/send', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ text: message })\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n                if (data.success) {\n                    // This should add the actual message object returned from the server\n                    setMessages([...messages, data.message]);\n                }\n                setMessage('');\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n        }\n    };\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            sendMessage();\n        }\n    };\n\n    return (\n        <div>\n            <h2>Home Page</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    onKeyDown={handleKeyDown}\n                />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n            <div>\n                {messages.map((msg, index) => (\n                    <div key={index}>\n                        <p>{msg.text}</p> {/* Assuming each message has a 'text' field */}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}