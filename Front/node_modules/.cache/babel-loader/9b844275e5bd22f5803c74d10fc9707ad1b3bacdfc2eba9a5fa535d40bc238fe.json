{"ast":null,"code":"const sendMessage = () => {\n  if (message.trim() !== '') {\n    // Prepare the HTTP request\n    fetch('http://localhost:9000/api/messages/send', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: message\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      setMessages([...messages, message]); // Update local state only on successful backend response\n      setMessage('');\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n};","map":{"version":3,"names":["sendMessage","message","trim","fetch","method","headers","body","JSON","stringify","text","then","response","json","data","console","log","setMessages","messages","setMessage","catch","error"],"sources":["/Users/prakshayjoshi/Documents/Projects/Chat-App/Frontend/my-app/src/components/HomePage.jsx"],"sourcesContent":["const sendMessage = () => {\n  if (message.trim() !== '') {\n    // Prepare the HTTP request\n    fetch('http://localhost:9000/api/messages/send', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text: message })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n      setMessages([...messages, message]); // Update local state only on successful backend response\n      setMessage('');\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  }\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGA,CAAA,KAAM;EACxB,IAAIC,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACzB;IACAC,KAAK,CAAC,yCAAyC,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAER;MAAQ,CAAC;IACxC,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;MAC7BG,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAEhB,OAAO,CAAC,CAAC,CAAC,CAAC;MACrCiB,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBN,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}